experimental:
  hub: true

hub:
  tls:
    insecure: true

metrics:
  prometheus:
    addRoutersLabels: true

global:
  checkNewVersion: false
  sendAnonymousUsage: false

log:
  level: "{{ rautomate_traefik_log_level }}"

{% if rautomate_traefik_access_log %}
accessLog: {}
{% endif %}

api:
  dashboard: true
{% if rautomate_traefik_insecure %}
  insecure: true
{% else %}
  insecure: false
{% endif %}

entryPoints:
  web:
    address: :80
{% if rautomate_traefik_ssl_enabled %}
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https

  websecure:
    address: :443
    http:
      tls:
        certResolver: letsencrypt
        domains:
          - main: "{{ rautomate_traefik_ssl_dns_provider_zone }}"
            sans:
              - "*.{{ rautomate_traefik_ssl_dns_provider_zone }}"

  traefikhub-api: ":12437"
  traefikhub-tunl: ":49519"

certificatesResolvers:
  letsencrypt:
    acme:
      email: "{{ rautomate_traefik_ssl_letsencrypt_email }}"
{% if rautomate_traefik_ssl_use_letsencrypt_staging_url %}
      caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
      storage: /certs/acme_staging.json
{% else %}
      storage: /certs/acme.json
{% endif %}
      dnsChallenge:
        provider: "{{ rautomate_traefik_ssl_dns_provider_code }}"
        resolvers:
          - "{{ rautomate_traefik_ssl_dns_resolver_1 }}"
          - "{{ rautomate_traefik_ssl_dns_resolver_2 }}"
{% endif %}

providers:
  providers:
{% if rautomate_traefik_custom_rules %}
  file:
    directory: "/customRules/"
    watch: true
{% endif %}  
  docker:
    network: "{{ rautomate_project_name }}_traefik_net"
    endpoint: unix:///var/run/docker.sock
    exposedByDefault: false
    defaultRule: {% raw %}Host(`{{if index .Labels "com.docker.compose.service" }}{{ index .Labels "com.docker.compose.service" }}{% endraw %}.{{ rautomate_docker_domain }}{% raw %}{{else}}{{ trimPrefix `/` .Name }}{% endraw %}.{{ rautomate_docker_domain }}{% raw %}{{end}}`){% endraw %}

{% if rautomate_traefik_pilot_token %}
pilot:
  token: "{{ rautomate_traefik_pilot_token }}"
{% endif %}
